import discord
import datetime
from cogs.utils import checks, config
from discord.ext import commands
from discord.utils import get
from setup_bot import StellaricBot

class Testing(commands.Cog, name="Testing", hidden=True):
  
  def __init__(self, bot: StellaricBot):
    self.bot = bot


def setup(bot: StellaricBot):
  bot.add_cog(Testing(bot))


  @commands.cooldown(1, 6, commands.BucketType.user)
  @commands.guild_only()
  @commands.command(
    name='timedif',
    help='For staff only.',
    usage='<id1> <id2>',
    aliases=['td']
  )
  async def timedif(
      self, ctx, 
      id1: Optional[str] = commands.Option(description="PLEASE PRESS TAB WHEN YOU FINISHED PASTING ID1"), 
      id2: Optional[str] = commands.Option(description="PLEASE PRESS TAB WHEN YOU FINISHED PASTING ID2")
    ):
      try:
        id1 = int(id1)
        id2 = int(id2)
          
      except:
          await ctx.send("Check your message ID's! They are incorrect!")
          
      time1 = discord.utils.snowflake_time(int(id1))
      time2 = discord.utils.snowflake_time(int(id2))
      
      ts_diff = time2 - time1
      secs = abs(ts_diff.total_seconds())
      answer='{} secs'.format(secs)
      
      embed = discord.Embed(title="Time Difference", description=f"Time: {answer}", color=0xf8c7c7)
      await ctx.send(embed=embed)


await self.bot.http.bulk_upsert_guild_commands(self.bot.application_id, gid, [])



        """
        A test command for trying out the new flags feature in discord.py v2.0
        Flag usage: `--flag [flag string]`
        Note that `--text... [text]` (with ellipsis) can accept a repeated amount of them:
        Like for example, in this case, with the flag `text`:
        `--text hello --text hi how r u --text a third text and so on`
        `--text...(25)` would mean it can have up to 25 different inputs.
        `--text [text*]` would mean that its necessary but not mandatory. AKA if there's multiple of them, you can pass only one and it will work. But you need **at least one of them**

        Flags that have an `=` sign mean that they have a default value.
        for example: `--color [Color=#ffffff]` means the color will be `#ffffff` if it can't find a color in the given input.
        Flags can also be mandatory, for example: `--text <text>`. the `<>` brackets mean it is not optional

        **Available flags:**
        `--title [text*]` Sets the embed title.
        `--description [text*]` Sets the embed body/description.
        `--color [color]` Sets the embed's color.
        `--image [http/https URL*]` Sets the embed's image.
        `--field...(25) [FieldFlags*]` Sets one of the embed's fields using field flags.
        `FieldFlags:`
        > `--name <text>` Sets that field's name
        > `--value <text>` Sets that field's value / body
        > `--inline [yes/no]` If the field should be in-line (displayed alongside other in-line fields if any)
        **For example:** `--field --name hi hello --value more text --inline no`
        _Note: You can have multiple `--field`(s) using `--name` and `--value` (up to 25)_
        """